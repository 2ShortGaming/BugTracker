@using Microsoft.AspNet.Identity
@using BugTracker.Helpers

@model BugTracker.Models.Ticket

@{

    var ticketHelper = new TicketHelper();
    var historyHelper = new HistoryHelper();
    ViewBag.Title = "Dashboard";
}

<div class="container">
    <div class="row">
        <div class="col-md-5 col-md-offset-1">
            <h3>Project Data</h3>
            <br />
            <h5>Project name: @Model.Project.Name</h5>
            <h5>Project Created: @Model.Project.Created</h5>
            
         
        </div>
    </div>
    <br />
    <hr />
    <div class="row">
        <div class="col-md-12">
            <h3>Ticket Data</h3>
            <br />
            <h5>Ticket Title: @Model.Issue</h5>
            <h5>Priority: @Model.TicketPriority.Name</h5>
            <h5>Status: @Model.TicketStatus.Name</h5>
            <h5>Type: @Model.TicketType.Name</h5>
        </div>
    </div>
    <br />
    <hr />
    <h3>Add Attachment</h3>
    <br />
    <div class="row">
        <div class="col-md-12">

        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("TicketId", Model.Id)

                <div class="form-group">
                    @Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextArea("Description", new { @class = "form-control", @rows = "5" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        <input type="file" name="file" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" value="Add Attachment" class="btn btn-primary btn-block enter-btn" />
                    </div>
                </div>
            }
        </div>
    </div>

    <table id="table" class="table table-bordered table-light">
        <thead>
            <tr>
                <th>
                   
                </th>
                <th>
                    @Html.DisplayName("Name")
                </th>
                <th>
                    @Html.DisplayName("File Name")
                </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var attachment in Model.Attachments.ToList())
            {
                <tr>
                    <td style="background-color:dimgray">
                        <img  src="@FileHelper.GetIcon(Path.GetExtension(attachment.FilePath))" class="img-thumbnail" style="height:30px;"/>
                    </td>
                    <td style="background-color:dimgray">
                        @Html.DisplayFor(modelItem => attachment.FileName)
                    </td>
                    <td style="background-color:dimgray">
                        <a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a>

                    </td>
                </tr>
            }

        </tbody>

    </table>
</div>
<hr />
<div class="container-fluid">
    <h3>Comments</h3>
    <h5>There are @Model.Comments.Count comments on this ticket</h5>
    <div class="row">
        <div class="col-md-10">
            <div>
                <div class="card-body">
                    @if (Model.Comments.Count > 0)
                    {
                        <div class="col-md-6">
                            <div class="comment-widgets m-b-20">
                                <div class="chat-box b-all">
                                    <ul class="chat-list">
                                        @{var count = 1;}
                                        @foreach (var comment in Model.Comments)
                                        {
                                            <li>
                                                <!-- Comment Row -->
                                                <div class="d-flex flex-row comment-row  b-all">
                                                    <div class="p-2"><span class="round"><a href=""><img src="@comment.User.AvatarPath" alt="user" width="50"></a></span></div>
                                                    <div class="comment-text w-100">
                                                        <h5>@comment.User.FullName</h5>
                                                        <div class="comment-footer">
                                                            <span class="date">@comment.Created.ToString("MMM dd yyyy")</span>
                                                        </div>
                                                        <p class="m-b-5 m-t-10">@comment.Comment</p>
                                                    </div>
                                                </div>
                                            </li>
                                            { count++; }
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>

                    }
                    @if (ticketHelper.CanMakeComment(Model.Id))
                    {
                        using (Html.BeginForm("Create", "TicketComments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("TicketId", Model.Id)
                            <div class="row p-t-20">
                                <div class="col-md-6">
                                    <label class="control-label">Add Comment</label>
                                    @Html.TextArea("Comment", new { @class = "form-control", @rows = "5" })
                                    <hr />
                                    <button type="submit" class="btn btn-success enter-btn"> <i class="fa fa-pencil"></i> Add New Comment</button>
                                </div>
                            </div>
                        }
                    }

                </div>
            </div>
        </div>

    </div>
    <h3>Change History</h3>
    <div class="row">
        <div class="col">
            @if (Model.Histories.Count > 0)
            {
                <table class="table table-striped table-borderless">
                    <thead>

                        <tr>

                            <th>
                                Changed By
                            </th>
                            <th>
                                Property
                            </th>
                            <th>
                                Old Value
                            </th>
                            <th>
                                New Value
                            </th>
                            <th>
                                Changed On
                            </th>

                        </tr>
                    </thead>

                    @foreach (var item in Model.Histories)
                    {
                        <tbody>
                            <tr>
                                <td style="background-color:dimgray">
                                    @Html.DisplayFor(modelItem => item.User.FirstName)
                                </td>
                                <td style="background-color:dimgray">
                                    @Html.DisplayFor(modelItem => item.Property)
                                </td>
                                <td style="background-color:dimgray">
                                    @Html.DisplayFor(modelItem => item.OldValue)
                                </td>
                                <td style="background-color:dimgray">
                                    @Html.DisplayFor(modelItem => item.NewValue)
                                </td>
                                <td style="background-color:dimgray">
                                    @Html.DisplayFor(modelItem => item.ChangedOn)
                                </td>
                            </tr>
                        </tbody>
                    }

                </table>

            }
            else
            {
                <h5>No changes have been made to this ticket</h5>
            }
        </div>
    </div>
</div>






